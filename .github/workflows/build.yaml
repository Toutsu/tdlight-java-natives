name: Build TDLib

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * 0' # weekly

jobs:
  build:
    strategy:
      matrix:
        include:
        - {os: ubuntu-20.04, arch: "linux/386"}
        - {os: ubuntu-20.04, arch: "linux/amd64"}
        - {os: ubuntu-20.04, arch: "linux/arm/v6"}
        - {os: ubuntu-20.04, arch: "linux/arm/v7"}
        - {os: ubuntu-20.04, arch: "linux/ppc64le"}
        - {os: windows-2019, arch: "amd64"}
        - {os: macos-10.15, arch: "amd64"}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install sudo package
        if: runner.os == 'Linux'
        run: |
          (apt-get update || true) 2>/dev/null
          (apt-get install -y sudo || true) 2>/dev/null
          sudo apt update
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
      - name: Setup ccache variables
        shell: bash
        run: |
          ARCH=${{ matrix.arch }}
          SAFE_ARCH=$(echo $ARCH | sed 's/\//\-/g')
          echo "CCACHE_SAFE_ARCH=$SAFE_ARCH" >> $GITHUB_ENV
      - name: Cache ccache
        if: runner.os == 'Linux'
        id: cache-ccache
        uses: actions/cache@v2
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-${{ env.CCACHE_SAFE_ARCH }}-ccache-all
          restore-keys: |
            ${{ runner.os }}-${{ env.CCACHE_SAFE_ARCH }}-ccache-
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Setup variables
        shell: bash
        run: |
          # ====== Variables
          export REVISION=${{ github.run_number }}
          export GH_MATRIX_OS=${{ matrix.os }}
          export GH_MATRIX_ARCH=${{ matrix.arch }}

          echo "$(realpath .)"
          ls -alch .
          source ./github-workflows/setup-variables.sh

          echo "REVISION=$REVISION" >> $GITHUB_ENV
          echo "TD_SRC_DIR=$TD_SRC_DIR" >> $GITHUB_ENV
          echo "TD_BIN_DIR=$TD_BIN_DIR" >> $GITHUB_ENV
          echo "TDNATIVES_BIN_DIR=$TDNATIVES_BIN_DIR" >> $GITHUB_ENV
          echo "TDNATIVES_CPP_SRC_DIR=$TDNATIVES_CPP_SRC_DIR" >> $GITHUB_ENV
          echo "TDNATIVES_DOCS_BIN_DIR=$TDNATIVES_DOCS_BIN_DIR" >> $GITHUB_ENV
          echo "TD_BUILD_DIR=$TD_BUILD_DIR" >> $GITHUB_ENV
          echo "TDNATIVES_CPP_BUILD_DIR=$TDNATIVES_CPP_BUILD_DIR" >> $GITHUB_ENV
          echo "JAVA_SRC_DIR=$JAVA_SRC_DIR" >> $GITHUB_ENV
          echo "TDLIB_SERIALIZER_DIR=$TDLIB_SERIALIZER_DIR" >> $GITHUB_ENV
          echo "PATH=$PATH" >> $GITHUB_ENV
          echo "JAVA_HOME=$JAVA_HOME" >> $GITHUB_ENV
          echo "JAVA_INCLUDE_PATH=$JAVA_INCLUDE_PATH" >> $GITHUB_ENV
          echo "CMAKE_EXTRA_ARGUMENTS=$CMAKE_EXTRA_ARGUMENTS" >> $GITHUB_ENV
          echo "VCPKG_DIR=$VCPKG_DIR" >> $GITHUB_ENV
          echo "MAVEN_OPTS=$MAVEN_OPTS" >> $GITHUB_ENV
          echo "GH_CPU_ARCH=$GH_CPU_ARCH" >> $GITHUB_ENV
          echo "CPU_ARCH_JAVA=$CPU_ARCH_JAVA" >> $GITHUB_ENV
          echo "CPU_ARCHITECTURE_NAME=$CPU_ARCHITECTURE_NAME" >> $GITHUB_ENV
          echo "CPU_CORES_NUM=$CPU_CORES_NUM" >> $GITHUB_ENV
          echo "CPU_CORES=$CPU_CORES" >> $GITHUB_ENV
          echo "OPERATING_SYSTEM_NAME=$OPERATING_SYSTEM_NAME" >> $GITHUB_ENV
          echo "OPERATING_SYSTEM_NAME_SHORT=$OPERATING_SYSTEM_NAME_SHORT" >> $GITHUB_ENV
          echo "SRC_TDJNI_LIBNAME=$SRC_TDJNI_LIBNAME" >> $GITHUB_ENV
          echo "DEST_TDJNI_LIBNAME=$DEST_TDJNI_LIBNAME" >> $GITHUB_ENV
      - name: Install build tools
        run: sudo apt-get install -y make git zlib1g-dev libssl-dev gperf php-cli cmake clang-6.0 libc++-dev libc++abi-dev ccache
      - name: Build
        run: |
          mkdir build
          cd build
          CXXFLAGS="-stdlib=libc++" CC=/usr/bin/clang-10 CXX=/usr/bin/clang++-10 cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX:PATH=../tdlib ..
          cmake --build . --target install -- -j4
      - uses: actions/upload-artifact@v2
        with:
          name: tdlight-${{ env.SAFE_ARCH }}
          path: tdlib/lib

